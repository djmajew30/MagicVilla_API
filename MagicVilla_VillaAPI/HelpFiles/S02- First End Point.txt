11. Add project to source control
https://github.com/bhrugen/MagicVilla_API
https://github.com/djmajew30/MagicVilla_API
Bottom taskbar, add to github repository

12. Code CleanUp
delete weather files


13. Create VillaAPIController Class

MagicVilla_VillaAPI/Controllers/VillaAPIController.cs
can add controller- API empty, or just use a class but name it ending in Controller.cs

using Microsoft.AspNetCore.Mvc;

namespace MagicVilla_VillaAPI.Controllers
{
    //Can use the generic below to automatically route to Controller prefix:
    //[Route("api/[controller]")] is the same as [Route("api/VillaAPI")] as It's in the VillaAPIController
    [Route("api/VillaAPI")]
    [ApiController]
    public class VillaAPIController : ControllerBase
    {
    }
}


14. First API Endpoint - HTTPGET

Create first model 
MagicVilla_VillaAPI/Models/Villa.cs

namespace MagicVilla_VillaAPI.Models
{
    public class Villa
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }
}

Work on controller
create an endpoint to get predefined data

        [HttpGet]
        public IEnumerable<Villa> GetVillas()
        {
            return new List<Villa>
            {
                new Villa { Id = 1, Name = "Pool View" },
                new Villa { Id = 2, Name = "Beach View" }
            };
        }


15. Using Controller Name in Route

    //Can use the generic below to automatically route to Controller prefix:
    //not ideal if you need to change controller name
    //[Route("api/[controller]")] is the same as [Route("api/VillaAPI")] as It's in the VillaAPIController
    [Route("api/VillaAPI")]


16. Add VillaDTO




17. Villa Data Store




18. Get individual Villa



