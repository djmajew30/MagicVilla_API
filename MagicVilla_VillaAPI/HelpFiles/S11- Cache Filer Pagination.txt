https://github.com/bhrugen/MagicVilla_API/commits/master/

"userName": "testadmin@gmail.com",
"password": "Admin123"


113. Caching Request (in API proj)
https://github.com/bhrugen/MagicVilla_API/commit/a5bafcac8509a471f587ac7c5609da519a2d7201
MagicVilla_VillaAPI/Controllers/v1/VillaAPIController.cs

        [HttpGet]
        [ResponseCache(Duration = 30)] //seconds
        ...
        public async Task<ActionResult<APIResponse>> GetVillas()

MagicVilla_VillaAPI/Program.cs

	//113. Caching
	builder.Services.AddResponseCaching();
	//50. repository
	builder.Services.AddScoped<IVillaRepository, VillaRepository>();

114. Caching Profile. ex. want a rule that says all should be cached for 30 seconds.
add to program.cs
https://github.com/bhrugen/MagicVilla_API/commit/9f35d216a457d617b37aec07dca609e8fe859c1c

MagicVilla_VillaAPI/Program.cs

                    ValidateAudience = false
                };
            }); ;
            ...
        //30. content negotiations
        //builder.Services.AddControllers();
        builder.Services.AddControllers(option =>
        {
            //114 caching profile
            option.CacheProfiles.Add("Default30",
               new CacheProfile()
               {
                   Duration = 30
               });
            //option.ReturnHttpNotAcceptable = true; // commented out in 31 so swagger still works with plain text
        }).AddNewtonsoftJson().AddXmlDataContractSerializerFormatters();
        ...
        builder.Services.AddEndpointsApiExplorer();


MagicVilla_VillaAPI/Controllers/v1/VillaAPIController.cs
		[ResponseCache(CacheProfileName = "Default30")]



115. Filters in API (getvillas)
https://github.com/bhrugen/MagicVilla_API/commit/6d17591dcb24de3ad231c8af0f18ffc54ef28472
MagicVilla_VillaAPI/Controllers/v1/VillaAPIController.cs

        public async Task<ActionResult<APIResponse>> GetVillas([FromQuery(Name ="filterOccupancy")]int? occupancy)
        {
            try
            {

                IEnumerable<Villa> villaList;

                if (occupancy > 0)
                {
                    villaList = await _dbVilla.GetAllAsync(u => u.Occupancy == occupancy);
                }
                else
                {
                    villaList = await _dbVilla.GetAllAsync();
                }



116. Seach Villa Name or url (getvillas), not going to db, but filtering the result
https://github.com/bhrugen/MagicVilla_API/commit/b2fa1fe55a432fb5829aeb3d7ceec2e4c5f8a2be

MagicVilla_VillaAPI/Controllers/v1/VillaAPIController.cs

        public async Task<ActionResult<APIResponse>> GetVillas([FromQuery(Name = "filterOccupancy")] int? occupancy,
            [FromQuery] string? search)
        {
            try
            {
                //115 filter
                IEnumerable<Villa> villaList;

                if (occupancy > 0)
                {
                    villaList = await _dbVilla.GetAllAsync(u => u.Occupancy == occupancy);
                }
                else
                {
                    villaList = await _dbVilla.GetAllAsync();
                }

                //116 search villa name or url filter
                if (!string.IsNullOrEmpty(search))
                {
                    villaList = villaList.Where(u => u.Name.ToLower().Contains(search)
                    || u.ImageUrl.ToLower().Contains(search));
                }
                _logger.LogInformation("Getting all villas");


117. Pagination in API
https://github.com/bhrugen/MagicVilla_API/commit/f5c13c1b03ca9f6fa147956930b9ca93f6979af6

MagicVilla_VillaAPI/Repository/IRepostiory/IRepository.cs

        //expression is for linq, can be ?null 
        Task<List<T>> GetAllAsync(Expression<Func<T, bool>>? filter = null, string? includeProperties = null,
            //117. Pagination (int pageSize = 3, int pageNumber = 1)
            int pageSize = 3, int pageNumber = 1);

MagicVilla_VillaAPI/Repository/Repository.cs

        public async Task<List<T>> GetAllAsync(Expression<Func<T, bool>>? filter = null, string? includeProperties = null
            //117. Pagination (int pageSize = 3, int pageNumber = 1)
            , int pageSize = 3, int pageNumber = 1)
        {
            IQueryable<T> query = dbSet; //does not get executed right away, so we can add filter

            if (filter != null)
            {
                query = query.Where(filter);
            }

            //117. Pagination
            if (pageSize > 0)
            {
                //set max to 100
                if (pageSize > 100)
                {
                    pageSize = 100;
                }

                //which records to get
                //skip0.take(5)
                //page number- 2     || page size -5
                //skip(5*(1)) take(5)
                query = query.Skip(pageSize * (pageNumber - 1)).Take(pageSize);
            }

MagicVilla_VillaAPI/Controllers/v1/VillaAPIController.cs

        public async Task<ActionResult<APIResponse>> GetVillas([FromQuery(Name = "filterOccupancy")] int? occupancy,
            [FromQuery] string? search
            //117. pagination
            , int pageSize = 2, int pageNumber = 1)
        {
            try
            {
                //115 filter
                IEnumerable<Villa> villaList;

                if (occupancy > 0)
                {
                    //117. pagination
                    villaList = await _dbVilla.GetAllAsync(u => u.Occupancy == occupancy
                            , pageSize: pageSize, pageNumber: pageNumber);
                }
                else
                {
                    //117. pagination
                    villaList = await _dbVilla.GetAllAsync(pageSize: pageSize, pageNumber: pageNumber);
                }


118. Add Pagination to Response Header
https://github.com/bhrugen/MagicVilla_API/commit/d1811e9444a6687ce702c4fafd35a0b09ca795e5

create new model
MagicVilla_VillaAPI/Models/Pagination.cs

MagicVilla_VillaAPI/Controllers/v1/VillaAPIController.cs

...
                    || u.ImageUrl.ToLower().Contains(search));
                }

                //118. Add Pagination to Response Header
                Pagination pagination = new() { PageNumber = pageNumber, PageSize = pageSize };
                Response.Headers.Add("X-Pagination", JsonSerializer.Serialize(pagination));

                _response.Result = _mapper.Map<List<VillaDTO>>(villaList); 
                ...

returns response header json
 x-pagination: {"PageNumber":1,"PageSize":2} 

119. Status Code and IsSuccess

villapi if not found, 
                //19. add validation for notfound 404
                if (villa == null)
                {
                    _response.StatusCode = HttpStatusCode.NotFound;
                    //119. status code and is success
                    _response.IsSuccess = false;
                    _response.ErrorMessages.Add("That villa id is not found");
                    return NotFound(_response);
                }

another idea
if status code between 200-299, is successful, if not, false

120. Bug Fixing





